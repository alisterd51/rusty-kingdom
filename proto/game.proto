syntax = "proto3";
package game;


import "common.proto";

// Building

message GetBuildingRequest { int32 id = 1; }
message GetBuildingResponse { common.Building building = 1; }

message ListBuildingsRequest {}
message ListBuildingsResponse { repeated common.Building buildings = 1; }

message ListBuildingsByFortressRequest { int32 fortress_id = 1; }
message ListBuildingsByFortressResponse { repeated common.Building buildings = 1; }

message ImproveBuildingRequest { int32 id = 1; }
message ImproveBuildingResponse {
  common.Fortress fortress = 1;
  common.Building building = 2;
}

message GetImproveBuildingCostsRequest { int32 id = 1; }
message GetImproveBuildingCostsResponse { common.Costs costs = 1; }

service BuildingService {
  rpc GetBuilding(GetBuildingRequest) returns (GetBuildingResponse);
  rpc ListBuildings(ListBuildingsRequest) returns (ListBuildingsResponse);
  rpc ListBuildingsByFortress(ListBuildingsByFortressRequest)
      returns (ListBuildingsByFortressResponse);
  rpc ImproveBuilding(ImproveBuildingRequest) returns (ImproveBuildingResponse);
  rpc GetImproveBuildingCosts(GetImproveBuildingCostsRequest)
      returns (GetImproveBuildingCostsResponse);
}

// Fortress

message CreateFortressRequest {}
message CreateFortressResponse {
  common.Fortress fortress = 1;
  repeated common.Building buildings = 2;
}

message GetFortressRequest { int32 id = 1; }
message GetFortressResponse { common.Fortress fortress = 1; }

message DeleteFortressRequest { int32 id = 1; }
message DeleteFortressResponse { bool success = 1; }

message ListFortressesRequest {}
message ListFortressesResponse { repeated common.Fortress fortresses = 1; }

message GetFortressGoldRequest { int32 id = 1; }
message GetFortressGoldResponse { int32 gold = 1; }

message CollectFortressGoldRequest { int32 id = 1; }
message CollectFortressGoldResponse { common.Fortress fortress = 1; }

message GetFortressFoodRequest { int32 id = 1; }
message GetFortressFoodResponse { int32 food = 1; }

message CollectFortressFoodRequest { int32 id = 1; }
message CollectFortressFoodResponse { common.Fortress fortress = 1; }

message GetFortressWoodRequest { int32 id = 1; }
message GetFortressWoodResponse { int32 wood = 1; }

message CollectFortressWoodRequest { int32 id = 1; }
message CollectFortressWoodResponse { common.Fortress fortress = 1; }

message GetFortressEnergyRequest { int32 id = 1; }
message GetFortressEnergyResponse { int32 energy = 1; }

message CollectFortressEnergyRequest { int32 id = 1; }
message CollectFortressEnergyResponse { common.Fortress fortress = 1; }

service FortressService {
  rpc CreateFortress(CreateFortressRequest) returns (CreateFortressResponse);
  rpc GetFortress(GetFortressRequest) returns (GetFortressResponse);
  rpc DeleteFortress(DeleteFortressRequest) returns (DeleteFortressResponse);
  rpc ListFortresses(ListFortressesRequest) returns (ListFortressesResponse);

  rpc GetFortressGold(GetFortressGoldRequest) returns (GetFortressGoldResponse);
  rpc CollectFortressGold(CollectFortressGoldRequest)
      returns (CollectFortressGoldResponse);

  rpc GetFortressFood(GetFortressFoodRequest) returns (GetFortressFoodResponse);
  rpc CollectFortressFood(CollectFortressFoodRequest)
      returns (CollectFortressFoodResponse);

  rpc GetFortressWood(GetFortressWoodRequest) returns (GetFortressWoodResponse);
  rpc CollectFortressWood(CollectFortressWoodRequest)
      returns (CollectFortressWoodResponse);

  rpc GetFortressEnergy(GetFortressEnergyRequest)
      returns (GetFortressEnergyResponse);
  rpc CollectFortressEnergy(CollectFortressEnergyRequest)
      returns (CollectFortressEnergyResponse);
}
